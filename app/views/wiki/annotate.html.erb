<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<% html_title t(:project_module_wiki), t(:label_history), t(:text_comment_wiki_page, page: @page.title) %>
<% breadcrumb_paths(*(@page.ancestors.reverse.collect { |parent| link_to h(parent.breadcrumb_title), { id: parent, project_id: parent.project } } + [h(@page.breadcrumb_title)])) %>

<%=
  render Primer::OpenProject::PageHeader.new do |header|
    header.with_title { h(@page.title) }
    header.with_breadcrumbs(
      breadcrumb_for_page(@page)
    )
    header.with_action_button(
      tag: :a,
      mobile_icon: :pencil,
      mobile_label: t(:button_edit),
      accesskey: accesskey(:edit),
      size: :medium,
      href: url_for(controller: "wiki", action: "edit", id: @page),
      aria: { label: I18n.t(:button_edit) },
      title: I18n.t(:button_edit)
    ) do |button|
      button.with_leading_visual_icon(icon: :pencil)
      t(:button_edit)
    end
    header.with_action_button(
      tag: :a,
      mobile_icon: :book,
      mobile_label: t(:label_history),
      size: :medium,
      href: url_for(controller: "wiki", action: "history", id: @page),
      aria: { label: t(:label_history) },
      title: t(:label_history)
    ) do |button|
      button.with_leading_visual_icon(icon: "book")
      t(:label_history)
    end
  end
%>

<p>
  <%= Version.model_name.human %> <%= link_to h(@annotate.content.version), action: "show", id: @page, version: @annotate.content.version %>
  <em>(<%= h(@annotate.content.journable.author ? @annotate.content.journable.author.name : t(:label_user_anonymous)) %>, <%= format_time(@annotate.content.journable.updated_at) %>)</em>
</p>
<% colors = Hash.new { |k, v| k[v] = (k.size % 12) } %>
<table class="filecontent annotate">
  <tbody>
    <% line_num = 1 %>
    <% @annotate.lines.each do |line| -%>
      <tr class="bloc-<%= colors[line[0]] %>">
        <th class="line-num"><%= line_num %></th>
        <td class="revision"><%= link_to line[0], controller: "/wiki", action: "show", project_id: @project, id: @page, version: line[0] %></td>
        <td class="author"><%= h(line[1]) %></td>
        <td class="line-code">
          <pre><%= h line[2] %></pre>
        </td>
      </tr>
      <% line_num += 1 %>
    <% end -%>
  </tbody>
</table>
