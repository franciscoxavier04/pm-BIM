<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<% html_title(t(:label_my_account), t(:label_interface)) %>

<%=
  render(Primer::OpenProject::PageHeader.new) do |header|
    header.with_title { t(:label_interface) }
    header.with_breadcrumbs(
      [{ href: my_account_path, text: t(:label_my_account) },
       t(:label_interface)]
    )
  end
%>

<%= error_messages_for "user" %>

<%=
  render(Primer::Beta::Subhead.new) do |component|
    component.with_heading(tag: :h3, size: :medium) { I18n.t("activerecord.attributes.user_preference.header_look_and_feel") }
  end
%>
<%=
  settings_primer_form_with(model: @user.pref, scope: :pref, url: { action: "update_settings" }, method: :patch, data: { turbo: false }) do |form|
    render(My::LookAndFeelForm.new(form))
  end
%>

<%=
  render(Primer::Beta::Subhead.new(mt: 3)) do |component|
    component.with_heading(tag: :h3, size: :medium) { I18n.t("activerecord.attributes.user_preference.header_alerts") }
  end
%>
<%=
  settings_primer_form_with(model: @user.pref, scope: :pref, url: { action: "update_settings" }, data: { turbo: false }) do |form|
    render(My::AlertsForm.new(form))
  end
%>

<%= call_hook(:view_my_settings, user: @user) %>
