<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%=
  admin_settings_primer_form_with(scope: :settings,
                                  url: admin_settings_authentication_path(tab: params[:tab]),
                                  method: :patch) do |f|
    render_inline_settings_form(f) do |form|
      form.select_list(
        name: :omniauth_direct_login_provider,
        input_width: :medium,
        label: I18n.t(:setting_omniauth_direct_login_provider),
        caption: I18n.t(
          "settings.authentication.omniauth_direct_login_hint_html",
          internal_path: internal_signin_url
        ).html_safe,
        include_blank: I18n.t(:label_none_parentheses)
      ) do |select|
        AuthProvider
          .where(available: true)
          .order("lower(display_name) ASC")
          .select(:type, :display_name, :slug)
          .to_a
          .each do |provider|
          select.option(
            value: provider.slug,
            label: "#{provider.display_name} (#{provider.human_type})",
            selected: Setting.omniauth_direct_login_provider == provider.slug
          )
        end
      end

      form.select_list(
        name: :autologin,
        input_width: :medium,
        label: I18n.t(:setting_autologin),
      ) do |select|
        select.option(
          value: 0,
          label: I18n.t(:label_disabled),
          selected: Setting.autologin == 0
        )

        Settings::Definition[:autologin].allowed.each do |days|
          select.option(
            value: days,
            label: I18n.t("datetime.distance_in_words.x_days", count: days),
            selected: Setting.autologin == days
          )
        end
      end

      form.check_box(name: :session_ttl_enabled)

      form.text_field(name: :session_ttl,
                      type: :number,
                      size: 6,
                      min: 0,
                      caption: I18n.t("setting_session_ttl_hint"),
                      trailing_visual: { text: { text: I18n.t(:label_minute_plural) } },
                      input_width: :small)

      form.check_box(name: :log_requesting_user)

      form.text_field(name: :after_first_login_redirect_url,
                      caption: I18n.t(:setting_after_first_login_redirect_url_text_html).html_safe,
                      input_width: :large)

      form.text_field(name: :after_login_default_redirect_url,
                      caption: I18n.t(:setting_after_login_default_redirect_url_text_html).html_safe,
                      input_width: :large)

      form.submit
    end
  end
%>
