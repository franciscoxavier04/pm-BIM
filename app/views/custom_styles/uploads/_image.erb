<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%= form_for @custom_style, url: custom_style_path, html: { multipart: true, class: "form -vertical" } do |f| %>
  <section class="form--section">
    <fieldset class="form--fieldset">
      <legend class="form--fieldset-legend"><%= image[:label] %></legend>
      <p class="form--field-instructions"><%= image[:instructions] %></p>
      <% if image[:present] %>
        <%= tag("img", src: image[:source], class: image[:img_class]) %>
      <% end %>
      <div class="grid-block">
        <div class="form--field -required">
          <div class="attachment_field form--field-container -vertical -shrink">
            <div class="form--file-container">
              <%= f.file_field image[:field], required: true, class: "attachment_choose_file", accept: image[:accept], size: "15" %>
            </div>
          </div>
        </div>
      </div>
      <%=
        render(Primer::Beta::Button.new(
          type: :submit
        )) do |button|
          button.with_leading_visual_icon(icon: image[:present] ? :upload : :plus)
          t(image[:present] ? :button_replace : :button_upload)
        end
      %>
      <% if image[:present] %>
        <%= render(Primer::Beta::Button.new(
          tag: :a,
          href: image[:delete_path],
          data: { method: :delete }
        )) do |button|
          button.with_leading_visual_icon(icon: :trash)
          t(:button_delete)
        end
        %>
      <% end %>
    </fieldset>
  </section>
<% end %>
