<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%=
  component_wrapper do
    primer_form_with(
      model: @token,
      url: generate_api_key_my_access_tokens_path,
      data: { turbo: true },
      method: :post
    ) do |form|
      component_collection do |collection|
        collection.with_component(
          Primer::Alpha::Dialog::Body.new(
            aria: { label: I18n.t(:dialog_title, scope: i18n_scope) }
          )
        ) do
          flex_layout(mb: 3) do |body|
            if show_warning?
              body.with_row(mb: 3) do
                render(Primer::Alpha::Banner.new(scheme: :warning)) do
                  I18n.t(:attention_text, scope: i18n_scope)
                end
              end
            end

            body.with_row do
              render(Primer::Beta::Text.new(tag: :p)) do
                I18n.t(:dialog_body, scope: i18n_scope)
              end
            end

            body.with_row do
              render(My::AccessToken::NewAccessTokenForm.new(form))
            end
          end
        end

        collection.with_component(Primer::Alpha::Dialog::Footer.new) do
          component_collection do |footer|
            footer.with_component(Primer::Beta::Button.new(data: { "close-dialog-id": My::AccessToken::NewAccessTokenDialogComponent::DIALOG_ID })) do
              I18n.t("button_cancel")
            end

            footer.with_component(Primer::Beta::Button.new(scheme: :primary, type: :submit, test_selector: "create-api-token-button")) do
              I18n.t(:create_button, scope: i18n_scope)
            end
          end
        end
      end
    end
  end
%>
