<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%=
  settings_primer_form_with(**form_options) do |form|
    component_wrapper do
      flex_layout do |container|
        container.with_row(mb: 3) do
          render(
            Primer::OpenProject::TreeView.new(
              expanded: true,
              data: {
                "admin--work-package-type-projects-target": "treeView",
                action: "click->admin--work-package-type-projects#updateSelectedProjects"
              },
              select_variant: :multiple
            )
          ) do |tree_view|
            build_project_tree(tree_view)
          end
        end

        container.with_row do
          form.hidden_field :project_ids,
                            value: "[]",
                            data: { "admin--work-package-type-projects-target": "selectedProjects" }
        end

        container.with_row do
          render(Primer::Beta::Button.new(scheme: :primary, type: :submit)) { t(:button_save) }
        end
      end
    end
  end
%>
