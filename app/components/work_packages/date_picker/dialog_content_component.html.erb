<%=
  content_tag("turbo-frame", id: "wp-datepicker-dialog--content") do
    component_wrapper(data: { "application-target": "dynamic",
                              controller: "work-packages--date-picker--preview" }) do
      component_collection do |collection|
        if schedulable? && has_relations?
          collection.with_component(WorkPackages::DatePicker::BannerComponent.new(work_package:, manually_scheduled: schedule_manually))
        end

        collection.with_component(Primer::Alpha::Dialog::Body.new(classes: "wp-datepicker-dialog--content")) do
          render(Primer::Alpha::UnderlinePanels.new(label: I18n.t("work_packages.datepicker_modal.tabs.aria_label"))) do |component|
            component.with_tab(selected: true, id: "wp-datepicker-dialog--content-tab--dates") do |tab|
              tab.with_text { I18n.t("work_packages.datepicker_modal.tabs.dates") }
              tab.with_panel  do
                render(WorkPackages::DatePicker::FormContentComponent.new(form_id: DIALOG_FORM_ID,
                                                                          schedulable: schedulable?,
                                                                          work_package:,
                                                                          schedule_manually:,
                                                                          focused_field:,
                                                                          touched_field_map:))
              end
            end

            additional_tabs.each do |tab|
              component.with_tab(id: "wp-datepicker-dialog--content-tab--#{tab[:key]}") do |tab_content|
                tab_content.with_text { I18n.t("work_packages.datepicker_modal.tabs.#{tab[:key]}") }
                tab_content.with_counter(count: tab[:relations].count)
                tab_content.with_panel do
                  if tab[:relations].any?
                    render(border_box_container(padding: :condensed)) do |box|
                      tab[:relations].visible.each do |relation|
                        box.with_row(scheme: :default) do
                          render(WorkPackageRelationsTab::RelationComponent.new(work_package:,
                                                                                relation: (relation unless tab[:is_child_relation?]),
                                                                                child: (relation if tab[:is_child_relation?]),
                                                                                editable: false))
                        end
                      end
                    end
                  else
                    render(Primer::Beta::Blankslate.new(border: true)) do |component|
                      component.with_visual_icon(icon: :book, size: :medium)
                      component.with_heading(tag: :h2) { I18n.t("work_packages.datepicker_modal.tabs.blankslate.#{tab[:key]}.title") }
                      component.with_description { I18n.t("work_packages.datepicker_modal.tabs.blankslate.#{tab[:key]}.description") }
                    end
                  end
                end
              end
            end
          end
        end

        collection.with_component(Primer::Alpha::Dialog::Footer.new) do
          component_collection do |footer|
            footer.with_component(Primer::ButtonComponent.new(data: { action: "work-packages--date-picker--preview#cancel" })) do
              I18n.t("button_cancel")
            end

            footer.with_component(Primer::ButtonComponent.new(scheme: :primary,
                                                              type: :submit,
                                                              form: DIALOG_FORM_ID,
                                                              disabled: !schedulable?)) do
              I18n.t("button_save")
            end
          end
        end
      end
    end
  end
%>
