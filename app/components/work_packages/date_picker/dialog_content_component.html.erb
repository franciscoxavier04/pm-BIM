<%=
  content_tag("turbo-frame", id: "wp-datepicker-dialog--content") do
    component_wrapper(data: { "application-target": "dynamic",
                              controller: "work-packages--date-picker--preview" }) do
      component_collection do |collection|
        if schedulable?
          collection.with_component(WorkPackages::DatePicker::BannerComponent.new(work_package:, manually_scheduled: schedule_manually))
        end

        collection.with_component(Primer::Alpha::Dialog::Body.new(classes: "Overlay-body_autocomplete_height")) do
          render(Primer::Alpha::UnderlinePanels.new(label: I18n.t("work_packages.datepicker_modal.tabs.aria_label"))) do |component|
            component.with_tab(selected: true, id: "wp-datepicker-dialog--content-tab--dates") do |tab|
              tab.with_text { I18n.t("work_packages.datepicker_modal.tabs.dates") }
              tab.with_panel  do
                primer_form_with(
                  model: work_package,
                  url: submit_path,
                  id: DIALOG_FORM_ID,
                  data: { "work-packages--date-picker--preview-target": "form" },
                  html: { autocomplete: "off" },
                  ) do |f|
                  flex_layout do |body|
                    body.with_row(mb: 3) do
                      flex_layout(align_items: :flex_end, justify_content: :space_between) do |first_row|
                        first_row.with_column do
                          concat(render(Primer::Alpha::FormControl.new(label: I18n.t("work_packages.datepicker_modal.mode.title"))) do |component|
                            component.with_input do
                              render(Primer::Alpha::SegmentedControl.new("aria-label": I18n.t("work_packages.datepicker_modal.mode.title"))) do |control|
                                control.with_item(tag: :a,
                                                  href: work_package_datepicker_dialog_content_path(params.merge(schedule_manually: true).permit!),
                                                  data: { turbo_stream: true },
                                                  label: I18n.t("work_packages.datepicker_modal.mode.manual"),
                                                  title: I18n.t("work_packages.datepicker_modal.mode.manual"),
                                                  selected: schedule_manually)
                                control.with_item(tag: :a,
                                                  href: work_package_datepicker_dialog_content_path(params.merge(schedule_manually: false).permit!),
                                                  data: { turbo_stream: true },
                                                  disabled: work_package.new_record?,
                                                  label: I18n.t("work_packages.datepicker_modal.mode.automatic"),
                                                  title: I18n.t("work_packages.datepicker_modal.mode.automatic"),
                                                  selected: !schedule_manually)
                              end
                            end
                          end)
                          concat(
                            f.hidden_field(:work_package,
                                           name: "work_package[schedule_manually]",
                                           value: schedule_manually)
                          )
                          concat(
                            f.hidden_field(:work_package,
                                           name: "work_package[schedule_manually_touched]",
                                           value: params[:schedule_manually].present?)
                          )
                          concat(
                            f.hidden_field(:work_package,
                                           name: "work_package[initial][schedule_manually]",
                                           value: work_package.schedule_manually)
                          )
                        end

                        first_row.with_column(mb: 1) do
                          render(Primer::Alpha::CheckBox.new(name: "work_package[ignore_non_working_days]",
                                                             label: I18n.t("work_packages.datepicker_modal.ignore_non_working_days.title"),
                                                             checked: !work_package.ignore_non_working_days,
                                                             disabled: disabled?,
                                                             value: 0,
                                                             unchecked_value: 1,
                                                             data: { "work-packages--date-picker--preview-target": "fieldInput",
                                                                     action: "work-packages--date-picker--preview#markFieldAsTouched" }))
                        end
                      end
                    end

                    if schedulable?
                      body.with_row(mb: 3) do
                        render(WorkPackages::DatePicker::Form.new(f,
                                                                  work_package:,
                                                                  focused_field:,
                                                                  touched_field_map:,
                                                                  disabled: disabled?))
                      end

                      body.with_row(mb: 3) do
                        helpers.angular_component_tag "opce-wp-modal-date-picker",
                                                      inputs: {
                                                        start_date: work_package.start_date,
                                                        due_date: work_package.due_date,
                                                        ignore_non_working_days: work_package.ignore_non_working_days,
                                                        schedule_manually:,
                                                        is_schedulable: !disabled?,
                                                        is_milestone: work_package.is_milestone?,
                                                        field_name: focused_field,
                                                        start_date_field_id: "work_package_start_date",
                                                        due_date_field_id: "work_package_due_date"
                                                      }
                      end
                    else
                      body.with_row(mb: 3) do
                        render(Primer::Beta::Blankslate.new(border: true)) do |component|
                          component.with_visual_icon(icon: :book, size: :medium)
                          component.with_heading(tag: :h2) { I18n.t("work_packages.datepicker_modal.blankslate.title") }
                          component.with_description { I18n.t("work_packages.datepicker_modal.blankslate.description") }
                        end
                      end
                    end
                  end
                end
              end
            end

            additional_tabs.each do |tab|
              component.with_tab(id: "wp-datepicker-dialog--content-tab--#{tab[:key]}") do |tab_content|
                tab_content.with_text { I18n.t("work_packages.datepicker_modal.tabs.#{tab[:key]}") }
                tab_content.with_counter(count: tab[:relations].count)
                tab_content.with_panel do
                  render(border_box_container(padding: :condensed)) do |box|
                    tab[:relations].visible.each do |relation|
                      box.with_row(scheme: :default) do
                        render(WorkPackageRelationsTab::RelationComponent.new(work_package:,
                                                                              relation: (relation unless tab[:is_child_relation?]),
                                                                              child: (relation if tab[:is_child_relation?]),
                                                                              editable: false))
                      end
                    end
                  end
                end
              end
            end
          end
        end

        collection.with_component(Primer::Alpha::Dialog::Footer.new) do
          component_collection do |footer|
            footer.with_component(Primer::ButtonComponent.new(data: { action: "work-packages--date-picker--preview#cancel" })) do
              I18n.t("button_cancel")
            end

            footer.with_component(Primer::ButtonComponent.new(scheme: :primary, type: :submit, form: DIALOG_FORM_ID)) do
              I18n.t("button_save")
            end
          end
        end
      end
    end
  end
%>
