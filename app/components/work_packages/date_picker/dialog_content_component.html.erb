<%=
  content_tag("turbo-frame", id: "wp-datepicker-dialog--content") do
    component_wrapper(data: { "application-target": "dynamic",
                              controller: "work-packages--date-picker--preview" }) do
      component_collection do |collection|
        if show_banner?
          collection.with_component(WorkPackages::DatePicker::BannerComponent.new(work_package:, manually_scheduled:))
        end

        collection.with_component(Primer::Alpha::Dialog::Body.new) do
          primer_form_with(
          model: work_package,
          url: work_package_datepicker_dialog_content_path,
          method: :put,
          id: DIALOG_FORM_ID,
          data: { "work-packages--date-picker--preview-target": "form" },
          html: { autocomplete: "off" },
          ) do |f|
            flex_layout do |body|
              body.with_row(mb: 3) do
                flex_layout(align_items: :flex_end, justify_content: :space_between) do |first_row|
                  first_row.with_column do
                    concat(render(Primer::Alpha::FormControl.new(label: I18n.t("work_packages.datepicker_modal.mode.title"))) do |component|
                      component.with_input do
                        render(Primer::Alpha::SegmentedControl.new("aria-label": I18n.t("work_packages.datepicker_modal.mode.title"))) do |control|
                          control.with_item(tag: :a,
                                            href: work_package_datepicker_dialog_content_path(params.merge(manually_scheduled: true).permit!),
                                            data: { turbo_stream: true },
                                            label: I18n.t("work_packages.datepicker_modal.mode.manual"),
                                            title: I18n.t("work_packages.datepicker_modal.mode.manual"),
                                            selected: manually_scheduled)
                          control.with_item(tag: :a,
                                            href: work_package_datepicker_dialog_content_path(params.merge(manually_scheduled: false).permit!),
                                            data: { turbo_stream: true },
                                            label: I18n.t("work_packages.datepicker_modal.mode.automatic"),
                                            title: I18n.t("work_packages.datepicker_modal.mode.automatic"),
                                            selected: !manually_scheduled)
                        end
                      end
                    end)
                    concat(
                        f.hidden_field(:work_package,
                                       name: "work_package[manually_scheduled]",
                                       value: manually_scheduled)
                    )
                    concat(
                        f.hidden_field(:work_package,
                                       name: "work_package[manually_scheduled_touched]",
                                       value: params[:manually_scheduled].present?)
                    )
                    concat(
                        f.hidden_field(:work_package,
                                       name: "work_package[initial][manually_scheduled]",
                                       value: work_package.schedule_manually)
                    )
                  end

                  first_row.with_column(mb: 1) do
                    render(Primer::Alpha::CheckBox.new(name: "work_package[ignore_non_working_days]",
                                                       label: I18n.t("work_packages.datepicker_modal.ignore_non_working_days.title"),
                                                       checked: !work_package.ignore_non_working_days,
                                                       value: 0,
                                                       unchecked_value: 1,
                                                       data: { "work-packages--date-picker--preview-target": "fieldInput",
                                                               action: "work-packages--date-picker--preview#markFieldAsTouched" }))
                  end
                end
              end

              body.with_row(mb: 3) do
                render(WorkPackages::DatePicker::Form.new(f,
                                                          work_package:,
                                                          focused_field:,
                                                          touched_field_map:))
              end

              body.with_row(mb: 3) do
                helpers.angular_component_tag "opce-wp-modal-date-picker",
                                              inputs: {
                                                start_date: work_package.start_date,
                                                due_date: work_package.due_date,
                                                ignore_non_working_days: work_package.ignore_non_working_days,
                                                schedule_manually: manually_scheduled,
                                                is_schedulable: true # TODO
                                              }
              end
            end
          end
        end

        collection.with_component(Primer::Alpha::Dialog::Footer.new) do
          component_collection do |footer|
            footer.with_component(Primer::ButtonComponent.new(data: { action: "work-packages--date-picker--preview#cancel" })) do
              I18n.t("button_cancel")
            end

            footer.with_component(Primer::ButtonComponent.new(scheme: :primary, type: :submit, form: DIALOG_FORM_ID)) do
              I18n.t("button_submit")
            end
          end
        end
      end
    end
  end
%>
