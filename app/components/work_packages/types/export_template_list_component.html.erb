<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%=
  component_wrapper(data: wrapper_data_attributes) do
    render(border_box_container(mb: 3, data: drag_and_drop_target_config)) do |component|
      component.with_header(font_weight: :bold, py: 2) do
        flex_layout(justify_content: :space_between, align_items: :center) do |section_header_container|
          section_header_container.with_column(py: 2) do
            render(Primer::Beta::Text.new(font_weight: :bold)) do
              I18n.t("types.edit.export_configuration.pdf_export_templates.label")
            end
          end
          section_header_container.with_column(flex_layout: true, justify_content: :flex_end) do |actions_container|
            actions_container.with_column do
              render(
                Primer::Beta::Button.new(
                  tag: :a,
                  href: enable_all_type_pdf_export_template_index_path(type_id: @type.id),
                  scheme: :invisible,
                  font_weight: :bold,
                  color: :subtle,
                  "aria-label": t("projects.settings.actions.label_enable_all"),
                  data: { "turbo-method": :put, "turbo-stream": true, test_selector: "enable-all-pdf-export-templates" }
                )
              ) do |button|
                button.with_leading_visual_icon(icon: "check-circle", color: :subtle)
                I18n.t("types.edit.export_configuration.pdf_export_templates.actions.label_enable_all")
              end
            end
            actions_container.with_column do
              render(
                Primer::Beta::Button.new(
                  tag: :a,
                  href: disable_all_type_pdf_export_template_index_path(type_id: @type.id),
                  scheme: :invisible,
                  font_weight: :bold,
                  color: :subtle,
                  "aria-label": t("projects.settings.actions.label_disable_all"),
                  data: { "turbo-method": :put, "turbo-stream": true, test_selector: "disable-all-pdf-export-templates" }
                )
              ) do |button|
                button.with_leading_visual_icon(icon: "x-circle", color: :subtle)
                I18n.t("types.edit.export_configuration.pdf_export_templates.actions.label_disable_all")
              end
            end
          end
        end
      end
      @type.pdf_export_templates.list.each do |template|
        component.with_row(data: draggable_item_config(template)) do
          render(
            WorkPackages::Types::ExportTemplateRowComponent.new(
              type: @type,
              template:
            )
          )
        end
      end
    end
  end
%>
