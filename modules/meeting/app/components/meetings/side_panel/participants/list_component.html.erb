<%=
  component_wrapper do
    render(border_box_container) do |box|
      box.with_header(color: :muted) do
        flex_layout(align_items: :center, justify_content: :space_between) do |flex|
          flex.with_column do
            flex_layout(align_items: :center) do |participants|
              participants.with_column do
                render(Primer::Beta::Text.new(font_weight: :bold)) { "Participants" }
              end
              participants.with_column(ml: 2) do
                render(Primer::Beta::Counter.new(count: @meeting.invited_participants.count, round: true, scheme: :primary))
              end
            end
          end
          if show_mark_all_attended?
            flex.with_column do
              render(
                Primer::Beta::Button.new(
                  tag: :a,
                  href: mark_all_attended_meeting_participants_path(@meeting),
                  align_self: :center,
                  data: { "turbo-method": :post }
                )
              ) do |button|
                button.with_leading_visual_icon(icon: :"op-person-assigned")
                "Mark all as attended"
              end
            end
          end
        end
      end

      if @meeting.invited_participants.none?
        box.with_row do
          render(Primer::Beta::Blankslate.new) do |blankslate|
            blankslate.with_visual_icon(icon: :people, size: :medium)
            blankslate.with_heading(tag: :h2).with_content("No participants")
            blankslate.with_description do
              flex_layout do |flex|
                flex.with_row(mb: 2) do
                  render(Primer::Beta::Text.new(color: :subtle)) { "There are no participants yet." }
                end
              end
            end
          end
        end
      else
        render(Primer::BaseComponent.new(tag: :div, classes: "participants-list")) do
          @meeting.all_changeable_participants.sort.each do |user|
            if @meeting.participants.present? && participant = @meeting.participants.detect { |p| p.user_id == user.id }
              box.with_row do
                flex_layout(align_items: :center, justify_content: :space_between) do |row|
                  row.with_column(flex: 1, classes: "ellipsis") do
                    render(
                      Users::AvatarComponent.new(
                        user: participant.user,
                        classes: "op-principal_flex",
                        hover_card: { active: true, target: :custom }
                      )
                    )
                  end
                  row.with_column do
                    flex_layout(align_items: :center, justify_content: :space_between) do |actions|
                      if @meeting.in_progress?
                        actions.with_column(ml: 2) do
                          render(Meetings::SidePanel::Participants::AttendedToggleButtonComponent.new(meeting: @meeting, participant:))
                        end
                      end
                      actions.with_column(ml: 2) do
                        render(
                          Primer::Beta::IconButton.new(
                            scheme: :invisible,
                            tag: :a,
                            href: meeting_participant_path(@meeting, participant),
                            data: { turbo_method: :delete },
                            icon: :x,
                            aria: { label: "Remove participant" }
                          )
                        )
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
    end
  end
%>
