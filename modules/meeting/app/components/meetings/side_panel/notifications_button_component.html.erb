<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%=
  component_wrapper(data: { "test-selector": "notifications-button" }) do
    render(Primer::OpenProject::SidePanel::Section.new) do |section|
      section.with_title { I18n.t("meeting.notifications.sidepanel.title") }

      if show_button?
        section.with_footer_button(
          color: :accent,
          tag: :a,
          href: toggle_notifications_dialog_project_meeting_path(@project, @meeting),
          classes: "hide-when-print",
          data: { "turbo-stream": true }
        ) do |button|
          button.with_leading_visual_icon(icon: button_icon)
          button_label
        end
      end

      flex_layout do |flex|
        flex.with_row do
          concat(render(Primer::Beta::Text.new(font_weight: :semibold)) { "#{state} " })
          concat(render(Primer::Beta::Text.new) { description })
        end

        unless show_button?
          flex.with_row(mt: 2) do
            render(Primer::Beta::Text.new) { additional_text }
          end
        end
      end
    end
  end
%>
