<%=
  flex_layout(data: { turbo: true }) do |show_page|
    show_page.with_row do
      render(Meetings::HeaderComponent.new(meeting: @meeting))
    end

    show_page.with_row do
      render(Primer::Alpha::Layout.new(stacking_breakpoint: :md)) do |content|
        content.with_main(classes: "dragula-container", data: wrapper_data_attributes) do
          flex_layout do |agenda|
            agenda.with_row do
              render(MeetingAgendaItems::ListComponent.new(meeting: @meeting))
            end

            agenda.with_row(data: { "test-selector": "meeting-main-add-button" }) do
              render(MeetingAgendaItems::NewButtonComponent.new(meeting: @meeting))
            end

            if OpenProject::FeatureDecisions.meeting_backlogs_active?
              agenda.with_row do
                render(MeetingSections::Backlogs::ContainerComponent.new(meeting: @meeting, collapsed: @collapsed))
              end
            end

            agenda.with_row(mt: 3, display: [:block, nil, :none]) do
              resource = ::API::V3::Meetings::MeetingRepresenter.new(@meeting, current_user: User.current, embed_links: false)
              concat render(Primer::Beta::Heading.new(tag: :h4)) { I18n.t(:label_attachment_plural) }
              concat helpers.list_attachments(
                resource,
                inputs: { allowUploading: true }
              )
            end
          end
        end

        content.with_sidebar(row_placement: :start, col_placement: :end) do
          render(Meetings::SidePanelComponent.new(meeting: @meeting))
        end
      end
    end
  end
%>
