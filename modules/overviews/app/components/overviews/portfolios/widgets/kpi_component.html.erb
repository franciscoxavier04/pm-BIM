<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>
<%= render(Primer::Beta::BorderBox.new(data: { controller: "expandable-list" })) do |component|
      component.with_header do
        render(Primer::OpenProject::BorderBox::CollapsibleHeader.new(box: component)) do |header|
          header.with_count(count: kpis.count)
          header.with_title do
            concat(render(Primer::Beta::Octicon.new(icon: :checklist, color: :muted, mr: 2)))
            concat(render(Primer::Beta::Text.new) { "OKRs und KPIs" })
          end
        end
      end

      if kpis.none?
        component.with_row do
          render(Primer::Beta::Blankslate.new) do |component|
            component.with_heading(tag: :h2) { "No KPIs yet" }
          end
        end
      elsif kpis.count <= @cutoff_limit
        kpis.find_each do |work_package|
          component.with_row do
            render(Primer::OpenProject::FlexLayout.new(justify_content: :space_between, align_items: :center)) do |flex|
              flex.with_column(flex_layout: true) do |wp_flex|
                wp_flex.with_row do
                  render(WorkPackages::InfoLineComponent.new(work_package:))
                end
                wp_flex.with_row do
                  render(Primer::Beta::Text.new(font_weight: :bold)) { work_package.subject }
                end
              end

              flex.with_column(style: "width: 25%") do
                render(Primer::Beta::ProgressBar.new(size: :large)) do |component|
                  component.with_item(
                    classes: "__hl_background_status_#{work_package.status_id}",
                    percentage: helpers.kpi_percentage(work_package) * 100
                  )
                end
              end
            end
          end
        end
      elsif kpis.count > @cutoff_limit
        kpis.take(@cutoff_limit).each do |work_package|
          component.with_row do
            render(Primer::OpenProject::FlexLayout.new(justify_content: :space_between, align_items: :center)) do |flex|
              flex.with_column(flex_layout: true) do |wp_flex|
                wp_flex.with_row do
                  render(WorkPackages::InfoLineComponent.new(work_package:))
                end
                wp_flex.with_row do
                  render(Primer::Beta::Text.new(font_weight: :bold)) { work_package.subject }
                end
              end

              flex.with_column(style: "width: 25%") do
                render(Primer::Beta::ProgressBar.new(size: :large)) do |component|
                  component.with_item(
                    classes: "__hl_background_status_#{work_package.status_id}",
                    percentage: helpers.kpi_percentage(work_package) * 100
                  )
                end
              end
            end
          end
        end

        kpis[@cutoff_limit..].each do |work_package|
          component.with_row(display: :none, data: { "expandable-list-target": "hiddenElements" }) do
            render(Primer::OpenProject::FlexLayout.new(justify_content: :space_between, align_items: :center)) do |flex|
              flex.with_column(flex_layout: true) do |wp_flex|
                wp_flex.with_row do
                  render(WorkPackages::InfoLineComponent.new(work_package:))
                end
                wp_flex.with_row do
                  render(Primer::Beta::Text.new(font_weight: :bold)) { work_package.subject }
                end
              end

              flex.with_column(style: "width: 25%") do
                render(Primer::Beta::ProgressBar.new(size: :large)) do |component|
                  component.with_item(
                    classes: "__hl_background_status_#{work_package.status_id}",
                    percentage: helpers.kpi_percentage(work_package) * 100
                  )
                end
              end
            end
          end
        end

        component.with_row(data: { "expandable-list-target": "showButton" }) do
          render(
            Primer::Beta::Button.new(
              scheme: :link,
              data: { action: "expandable-list#showElements" }
            )
          ) { I18n.t("label_show_more") }
        end
      end
    end %>
