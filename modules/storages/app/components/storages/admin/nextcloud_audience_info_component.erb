<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%=
  component_wrapper(tag: 'turbo-frame') do
    grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
      grid.with_area(:item, tag: :div, mr: 3) do
        concat(render(Primer::Beta::Text.new(font_weight: :bold, mr: 1, test_selector: 'nextcloud-audience-label')) { I18n.t('storages.file_storage_view.nextcloud_audience') })
        concat(configuration_check_label_for(:nextcloud_audience_configured))
      end

      grid.with_area(:description, tag: :div, color: :subtle, test_selector: 'nextcloud-audience-description') do
        concat(render(Primer::Beta::Text.new) {
          if storage.nextcloud_audience.present?
            I18n.t('storages.file_storage_view.nextcloud_audience_description', audience: storage.nextcloud_audience)
          else
            I18n.t('storages.file_storage_view.nextcloud_audience_blank')
          end
        })
      end

      if editable_storage?
        grid.with_area(:"icon-button", tag: :div, color: :muted) do
          flex_layout(justify_content: :flex_end) do |icons_container|
            icons_container.with_column do
              render(
                Primer::Beta::IconButton.new(
                  icon: :pencil,
                  tag: :a,
                  scheme: :invisible,
                  href: edit_nextcloud_audience_admin_settings_storage_path(storage),
                  aria: { label: I18n.t('storages.label_edit_nextcloud_audience') },
                  test_selector: 'storage-edit-nextcloud-audience-button',
                  data: { turbo_stream: true }
                )
              )
            end
          end
        end
      end
    end
  end
%>
