<%=
  render(border_box_container) do |component|
    component.with_header(color: :muted) do
      render(Primer::Beta::Text.new(font_weight: :semibold)) { I18n.t('storages.file_storage_view.general_information') }
    end

    component.with_row(scheme: :default) do
      if wizard_step == "general_info"
        render(Storages::Admin::Forms::GeneralInfoFormComponent.new(storage, in_wizard: true))
      else
        render(Storages::Admin::GeneralInfoComponent.new(storage))
      end
    end

    if storage.provider_type_nextcloud?
      component.with_row(scheme: :neutral, color: :muted) do
        grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
          grid.with_area(:item, tag: :div, mr: 3) do
            render(Primer::Beta::Text.new(font_weight: :semibold, mr: 1)) { I18n.t('storages.file_storage_view.oauth_configuration') }
          end
        end
      end

      component.with_row(scheme: :default) do
        if wizard_step == "oauth_application"
          render(Storages::Admin::OAuthApplicationInfoCopyComponent.new(oauth_application:, storage:, in_wizard: true))
        else
          render(Storages::Admin::OAuthApplicationInfoComponent.new(oauth_application:, storage:))
        end
      end

      component.with_row(scheme: :default) do
        if wizard_step == "oauth_client"
          render(Storages::Admin::Forms::OAuthClientFormComponent.new(oauth_client: storage.oauth_client, storage:, in_wizard: true))
        else
          render(Storages::Admin::OAuthClientInfoComponent.new(oauth_client: storage.oauth_client, storage:))
        end
      end

      component.with_row(scheme: :neutral, color: :muted) do
        grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
          grid.with_area(:item, tag: :div) do
            render(Primer::Beta::Text.new(font_weight: :semibold, mr: 1)) { I18n.t('storages.file_storage_view.project_folders') }
          end
        end
      end

      component.with_row(scheme: :default) do
        if wizard_step == "automatically_managed_project_folders"
          render(Storages::Admin::Forms::AutomaticallyManagedProjectFoldersFormComponent.new(storage, in_wizard: true))
        else
          render(Storages::Admin::AutomaticallyManagedProjectFoldersInfoComponent.new(storage))
        end
      end
    end

    if storage.provider_type_one_drive?
      component.with_row(scheme: :neutral, color: :muted) do
        grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
          grid.with_area(:item, tag: :div, mr: 3) do
            render(Primer::Beta::Text.new(font_weight: :semibold, mr: 1)) { I18n.t('storages.file_storage_view.access_management.title') }
          end
        end
      end

      component.with_row(scheme: :default) do
        if wizard_step == "access_management"
          render(Storages::Admin::Forms::AccessManagementFormComponent.new(storage, in_wizard: true))
        else
          render(Storages::Admin::AccessManagementComponent.new(storage))
        end
      end

      component.with_row(scheme: :neutral, color: :muted) do
        grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
          grid.with_area(:item, tag: :div, mr: 3) do
            render(Primer::Beta::Text.new(font_weight: :semibold, mr: 1)) { I18n.t('storages.file_storage_view.oauth_configuration') }
          end
        end
      end

      component.with_row(scheme: :default) do
        if wizard_step == "oauth_client"
          render(Storages::Admin::Forms::OAuthClientFormComponent.new(oauth_client: storage.oauth_client, storage:, in_wizard: true))
        else
          render(Storages::Admin::OAuthClientInfoComponent.new(oauth_client: storage.oauth_client, storage:))
        end
      end

      component.with_row(scheme: :default) do
        if wizard_step == "redirect_uri"
          render(Storages::Admin::Forms::RedirectUriFormComponent.new(oauth_client: storage.oauth_client, storage:, in_wizard: true))
        else
          render(Storages::Admin::RedirectUriComponent.new(oauth_client: storage.oauth_client, storage:))
        end
      end
    end
  end
%>
