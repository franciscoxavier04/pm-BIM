<% html_title t(:label_administration), t("project_module_storages") %>

<% button_block = lambda do |button|
     button.with_leading_visual_icon(icon: :plus)
     button.with_trailing_action_icon(icon: :"triangle-down")
     I18n.t("storages.label_storage")
   end %>

<% content_for :content_header do %>
  <%= render(Primer::OpenProject::PageHeader.new) do |header| %>
    <% header.with_title { t("external_file_storages") } %>
    <% header.with_description { t("storages.page_titles.file_storages.subtitle") } %>
    <% header.with_breadcrumbs(
         [{ href: admin_index_path, text: t("label_administration") },
          { href: admin_settings_storages_path, text: t("project_module_storages"), skip_for_mobile: true },
          t("external_file_storages")]
       ) %>
  <% end %>

  <%= render(Primer::OpenProject::SubHeader.new) do |subheader|
        subheader.with_action_menu(
          leading_icon: :plus,
          trailing_icon: :"triangle-down",
          label: I18n.t("storages.label_storage"),
          test_selector: "storages-select-provider-action-menu",
          anchor_align: :end,
          button_arguments: { scheme: :primary,
                              aria: { label: I18n.t("storages.label_add_new_storage") },
                              test_selector: "storages-create-new-provider-button" }
        ) do |menu|
          ::Storages::Storage::PROVIDER_TYPES.each do |provider_type|
            short_provider_type = provider_type.constantize.short_provider_name

            menu.with_item(
              label: I18n.t("storages.provider_types.#{short_provider_type}.name"),
              href: url_helpers.new_admin_settings_storage_path(provider: short_provider_type)
            ) do |item|
              if provider_type.constantize.missing_required_enterprise_token?
                item.with_trailing_visual_icon(
                  icon: "op-enterprise-addons",
                  classes: "upsell-colored"
                )
              end
            end
          end
        end
      end %>
<% end %>

<%= render(::Storages::Admin::StorageListComponent.new(@storages)) %>
