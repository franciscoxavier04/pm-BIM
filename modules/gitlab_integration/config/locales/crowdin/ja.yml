#-- copyright
#OpenProject is an open source project management software.
#Copyright (C) 2023 Ben Tey
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License version 3.
#OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
#Copyright (C) 2006-2013 Jean-Philippe Lang
#Copyright (C) 2010-2013 the ChiliProject Team
#Copyright (C) the OpenProject GmbH
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#See docs/COPYRIGHT.rdoc for more details.
#++
ja:
  attributes:
    commit: "コミット"
    gitlab: "GitLab識別子"
    gitlab_avatar_url: "アバターURL"
    gitlab_email: "GitLabメールアドレス"
    gitlab_html_url: "GitLab HTML URL"
    gitlab_merge_request: "マージ・リクエスト"
    gitlab_name: "GitLab名"
    gitlab_updated_at: "更新日時"
    gitlab_user_avatar_url: "GitLabアバターURL"
    gitlab_username: "GitLabユーザー名"
  activerecord:
    attributes:
      gitlab_pipeline:
        ci_details: "CI詳細"
      gitlab_merge_request:
        labels: "ラベル"
    errors:
      models:
        gitlab_issue:
          attributes:
            labels:
              invalid_schema: "をキーとするハッシュの配列でなければなりません"
        gitlab_merge_request:
          attributes:
            labels:
              invalid_schema: "をキーとするハッシュの配列でなければなりません"
  project_module_gitlab: "GitLab"
  permission_show_gitlab_content: "GitLabのコンテンツを表示する"
  gitlab_integration:
    merge_request_opened_comment: >
      **オープン：** [%{gitlab_user}](%{gitlab_user_url})によって[%{repository}](%{repository_url})へのマージリクエスト%{mr_number}[%{mr_title}](%{mr_url})がオープンされました。
    merge_request_closed_comment: >
      **クローズ：** [%{gitlab_user}](%{gitlab_user_url})によって[%{repository}](%{repository_url})へのマージリクエスト%{mr_number}[%{mr_title}](%{mr_url})がクローズされました。
    merge_request_merged_comment: >
      **マージ済み：** [%{gitlab_user}](%{gitlab_user_url})によって[%{repository}](%{repository_url})へのマージリクエスト%{mr_number}[%{mr_title}](%{mr_url})がマージされました。
    merge_request_reopened_comment: >
      **MR Reopened:** マージリクエスト %{mr_number} [%{mr_title}](%{mr_url}) の%{repository}](%{repository_url}) は [%{gitlab_user}](%{gitlab_user_url} ) によって再び開かれました。
    note_commit_referenced_comment: >
      **Referenced in Commit:** [%{gitlab_user}](%{gitlab_user_url}) は、[%{repository}](%{repository_url}) のコミットノート [%{commit_id}](%{commit_url}) でこの WP を参照しています：
      %{commit_note}
    note_mr_referenced_comment: >
      MR:** Referenced in MR:** [%{gitlab_user}](%{gitlab_user_url}) は、マージリクエスト %{mr_number} [%{mr_title}](%{mr_url}) の [%{repository}](%{repository_url}) でこの WP を参照しました：
      %{mr_note}
    note_mr_commented_comment: >
      **Commented in MR:** [%{gitlab_user}](%{gitlab_user_url}) がこの WP をマージリクエスト %{mr_number} [%{mr_title}](%{mr_url}) の [%{repository}](%{repository_url}) にコメントしました：
      %{mr_note}
    note_issue_referenced_comment: >
      **Referenced in Issue:** [%{gitlab_user}](%{gitlab_user_url}) は、このWPを %{issue_number} [%{issue_title}](%{issue_url}) の [%{repository}](%{repository_url}) で参照しています：
      %{issue_note}
    note_issue_commented_comment: >
      **Commented in Issue:** [%{gitlab_user}](%{gitlab_user_url}) は、このWPを %{issue_number} [%{issue_title}](%{issue_url}) の [%{repository}](%{repository_url}) にコメントしました：
      %{issue_note}
    note_snippet_referenced_comment: >
      **Referenced in Snippet:** [%{gitlab_user}](%{gitlab_user_url}) は、このWPをスニペット %{snippet_number} [%{snippet_title}](%{snippet_url}) の [%{repository}](%{repository_url}) で参照しています：
      %{snippet_note}
    issue_opened_referenced_comment: >
      **Issue Opened:** Issue %{issue_number} [%{issue_title}](%{issue_url}) for [%{repository}](%{repository_url}) has been opened by [%{gitlab_user}](%{gitlab_user_url}).
    issue_closed_referenced_comment: >
      **Issue Closed:** Issue %{issue_number} [%{issue_title}](%{issue_url}) for [%{repository}](%{repository_url}) has been closed by [%{gitlab_user}](%{gitlab_user_url}).
    issue_reopened_referenced_comment: >
      **Issue Reopened:** Issue %{issue_number} [%{issue_title}](%{issue_url}) for [%{repository}](%{repository_url}) has been reopened by [%{gitlab_user}](%{gitlab_user_url}).
    push_single_commit_comment: >
      **MR:** [%{gitlab_user}](%{gitlab_user_url}) で [%{commit_number}](%{commit_url}) が [%{repository}](%{repository_url}) に押される %{commit_timestamp}:
      %{commit_note}
    push_single_commit_comment_with_ref: >
      ** %{reference}で押される:** [%{gitlab_user}](%{gitlab_user_url}) で押される [%{commit_number}](%{commit_url}) で押される [%{repository}](%{repository_url}) で押される %{commit_timestamp}:
      %{commit_note}
    push_multiple_commits_comment: >
      **MR:** [%{gitlab_user}](%{gitlab_user_url}) は複数のコミット [%{commit_number}](%{commit_url}) から [%{repository}](%{repository_url}) を %{commit_timestamp}:
      %{commit_note}でプッシュした
