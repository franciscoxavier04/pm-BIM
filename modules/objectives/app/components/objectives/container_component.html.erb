<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%>

<%
  @objectives.each do |objective|
    key_results = key_results_for(objective)
    concat(
      render(Primer::Beta::BorderBox.new(mb: 3)) do |box|
        box.with_header do
          flex_layout(justify_content: :space_between, align_items: :center) do |header|
            header.with_column(mr: 2) do
              concat(
                render(
                  Primer::Beta::Link.new(
                    href: url_for(controller: "/work_packages", action: "show", id: objective),
                    title: objective.subject,
                    color: :muted,
                    mr: 1
                  )
                ) { "Ziel ##{objective.id}" }
              )
              concat render(Primer::Beta::Text.new) { objective.subject }
            end
            header.with_column do
              render(Primer::Alpha::ActionMenu.new) do |menu|
                menu.with_show_button(
                  "aria-label": "Aktionen",
                  scheme: :invisible,
                  icon: "kebab-horizontal"
                )

                menu.with_item(
                  label: "Details",
                  href: url_for(controller: "/work_packages", action: "show", id: objective),
                  tag: :a
                ) do |item|
                  item.with_leading_visual_icon(icon: :eye)
                end

                menu.with_item(
                  label: "Metrik hinzufÃ¼gen",
                  tag: :a,
                  content_arguments: {
                    data: { turbo_stream: true },
                  },
                  href: new_project_work_packages_dialog_path(@project,
                                                              parent_id: objective.id,
                                                              type_id: BmdsHackathon::Objectives.key_result_type)
                ) do |item|
                  item.with_leading_visual_icon(icon: :plus)
                end
              end
            end
          end
        end

        if key_results.empty?
          box.with_row do
            render(Primer::Beta::Text.new) { "Keine Metriken definiert." }
          end
        end

        key_results.find_each do |key_result|
          box.with_row do
            render(Primer::OpenProject::FlexLayout.new(justify_content: :space_between, align_items: :center)) do |flex|
              flex.with_column(flex_layout: true) do |wp_flex|
                wp_flex.with_row do
                  render(WorkPackages::InfoLineComponent.new(work_package: key_result))
                end
                wp_flex.with_row do
                  render(Primer::Beta::Text.new(font_weight: :bold)) { key_result.subject }
                end
              end

              percentage = helpers.key_result_percentage(key_result)

              flex.with_column(flex_layout: true, align_items: :center, style: "width: 50%") do |progress_flex|
                progress_flex.with_column(flex: 1) do
                  render(Primer::Beta::ProgressBar.new(size: :large)) do |component|
                    component.with_item(
                      classes: "__hl_background_status_#{key_result.status_id}",
                      percentage:
                    )
                  end
                end
                progress_flex.with_column(ml: 2) do
                  render(Primer::Beta::Text.new(font_size: :small, color: :subtle)) { "#{percentage.round}%" }
                end
              end
            end
          end
        end
      end
    )
  end
%>
