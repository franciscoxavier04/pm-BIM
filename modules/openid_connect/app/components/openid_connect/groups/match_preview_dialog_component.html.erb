<%#-- copyright
OpenProject is an open source project management software.
Copyright (C) the OpenProject GmbH

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 3.

OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
Copyright (C) 2006-2013 Jean-Philippe Lang
Copyright (C) 2010-2013 the ChiliProject Team

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See COPYRIGHT and LICENSE files for more details.

++#%><% %>

<%= render(Primer::Alpha::Dialog.new(id: dialog_id, title: t(".title"), size: :xlarge, **system_arguments)) do |dialog|
  dialog.with_header(variant: :large)
  dialog.with_show_button { t(".show_button") }

  dialog.with_body do
    render(Primer::OpenProject::FlexLayout.new) do |component|
      component.with_row(mb: 3) do
        render(Primer::Beta::Text.new(color: :muted)) { t(".description") }
      end
      component.with_row(flex_layout: true) do |flex_child|
        flex_child.with_column(mr: 2) do
          render(Primer::Alpha::TextArea.new(
            name: :preview_group_regexes,
            label: OpenIDConnect::Provider.human_attribute_name(:group_regexes),
            caption: link_translate("openid_connect.instructions.group_regexes",
                                    links: { docs_url: %i[sysadmin_docs oidc_groups] },
                                    external: true),
            rows: 4,
            data: {
              "openid-connect--match-preview-dialog-target": "regexpInput"
            }
          ))
        end
        flex_child.with_column(ml: 2) do
          render(Primer::Alpha::TextArea.new(
            name: :preview_group_names,
            label: t(".group_names_label"),
            caption: t(".group_names_description"),
            rows: 4,
            data: {
              "openid-connect--match-preview-dialog-target": "groupNamesInput"
            }
          ))
        end
      end
      component.with_row(mt: 3) do
        render(OpenIDConnect::Groups::MatchPreviewComponent.new([]))
      end
    end
  end

  dialog.with_footer(show_divider: true) do
    concat(render(Primer::Beta::Button.new(data: { "close-dialog-id": dialog_id })) { I18n.t("button_cancel") })
    concat(render(Primer::Beta::Button.new(scheme: :primary, data: { action: "click->openid-connect--match-preview-dialog#submitDialog" })) { I18n.t("button_apply") })
  end
end %>
