This component is currently an own implementation for OpenProject. It follows as strict as possible the requirements that Primer has set up for their [(react) TreeView](https://primer.style/product/components/tree-view/).

## Overview

<%= embed OpenProject::Common::TreeViewPreview, :default %>

## Anatomy

![Tree view anatomy](<%= image_path("lookbook/tree_view_anatomy.png") %>)

Basically, we follow Primer's specification of a TreeView:

1. Parent node: Expands/collapses to show/hide child nodes.
2. End node: A node with no children (internally called "leaf")
3. Chevron: Expands/collapses a parent node and indicates expanded/collapsed state.
4. Nesting level indicator lines: Each line represents a level of nesting depth
5. Leading action (optional): An IconButton to allow interaction with the node besides activating or expanding.
6. Leading visual (optional): A visual cue for additional context
7. Node label: The text label for the node
8. Trailing visual (optional): Same as a leading visual, but at the end

### Multi-select

In addition to Primer's guidelines, we introduced an option called `select_variant` which can either be

* `none` (default)
* `multiple`: Whe `multiple` is chosen, there is a checkbox rendered between the leading action and the leading visual.

Further, a `selection_strategy` can be configured. This influences the behaviour when selecting a parent node.

* `descendants` (default): Selecting a parent, will automatically select all children. Deselecting the children, will leave the parent in a so called "mixed" state
* `self`: Selecting a parent, does not affect the children

<%= embed OpenProject::Common::TreeViewPreview, :multi_select, panels: %i[params] %>

### Loading strategies

We support two loading strategies:

* static (default): All items are loaded when the component is rendered
* dynamic: Items are loaded from the server as soon as the parents are expanded

For more examples have a look [here](../../inspect/primer/open_project/file_tree_view/loading_skeleton).

### FileTreeView

There is a special component called `FileTreeView` which is a pre-configured `TreeView` for the use case of showing a file hierarchy. For detailed examples have a look [here](../../inspect/primer/open_project/file_tree_view/default).

<%= embed OpenProject::Common::TreeViewPreview, :file_tree, panels: %i[params source] %>

## Best practices

**Do**

**Don't**

## Used in

* the details view of a hierarchy CustomField

## Examples

For detailed examples have a look at the other [preview examples](../../inspect/primer/open_project/tree_view/playground) of the component.

Please check out also the [playground for the individual items](../../inspect/primer/open_project/tree_view/leaf_node_playground).

This is an exemplary playground of the `Primer::OpenProject::TreeView`.

<%= embed OpenProject::Common::TreeViewPreview, :default, panels: %i[params source] %>
