This component defines a colored status button with an action menu to select other statuses. The component is optionally marked readonly, resulting in disabling the action menu.

The colours adapt to the currently active mode (light/dark/light high contrast).

## Overview

<%= embed OpPrimer::StatusButtonComponentPreview, :playground %>

## Anatomy

The component provides two use-cases:

**1. Using colors only**

For any selectable status items, the color will be shown as a small circle using our internal color helpers for that.

<%= embed OpPrimer::StatusButtonComponentPreview, :playground %>

**2. Using icons and colors**

Only the button itself will be shown coloured with a leading icon. In the action menu dropdown, there will also be used leading icons. Colors will not be shown in the dropdown.

<%= embed OpPrimer::StatusButtonComponentPreview, :with_icon %>

## Best practices

**Do**

-

**Don't**

- Don't use the component if the status is not colored. You can simply use an ActionMenu for this case.

## Used in

The component is used in:

* Meetings to signal the status of the meeting, as well as providing options to change it.
* It will be used in the future for the work package status.

## Examples

For detailed examples have a look at the other [preview examples](/lookbook/inspect/OpenProject/Primer/status_button/playground) of the component.

This is an exemplary playground of the `OpPrimer::StatusButtonComponent`.

<%= embed OpPrimer::StatusButtonComponentPreview, :playground, panels: %i[params source] %>

## Technical notes

The StatusButton component is a composition of a Primer Button and Primer ActionMenu. You provide options of statuses using the `OpPrimer::StatusButtonOption`. In there, you can pass:

* `name`: (required) the name of the option
* `icon`: (optional) the leading icon
* `color_ref`: (optional) The reference of the object to be coloured (for persisted items (like WorkPackage status or type), this is the ID, otherwise some other unique identifier)
* `color_namespace`: (optional, although it is required when setting `color_ref`) The namespace is usually the name of the coloured objects (e.g "status", "type", "meeting_status".

The `color_ref` and `color_namespace` are used together to build internally the highlighting classes for the options (e.g `__hl_inline_status_1`)

**Note** For this to work, your `color_namespace` has to be registered so that the classes are created beforehand. Have a look [here](https://github.com/opf/openproject/blob/dev/app/views/highlighting/styles.css.erb) on how this is done for the already existing namespaces.

```css
&lt;%# For persisted objects %&gt;
&lt;%= resources_scope_color_css("status", ::Status) %&gt;
&lt;%= resources_scope_color_css("priority", ::IssuePriority) %&gt;
&lt;%= resources_scope_color_css("type", ::Type, inline_foreground: true) %&gt;

&lt;%# For non-persisted objects %&gt;
&lt;% Meetings::Statuses::AVAILABLE.each do |meeting_status| %&gt;
  &lt;%= resource_color_css("meeting_status", meeting_status) %&gt;
&lt;% end %&gt;
```

### Code structure

The status button can be called directly

```html
  &lt;%=
    items = [
        OpPrimer::StatusButtonOption.new(name: "Closed",
                                         icon: :lock,
                                         color_ref: 1,
                                         color_namespace: "status",
                                         tag: :a,
                                         href: "/bar")
      ]
    component = OpPrimer::StatusButtonComponent.new(current_status: items.first,
                                                    items: items,
                                                    readonly: false,
                                                    button_arguments: { size: :medium, title: "foo" })
    end
  %&gt;
```

Further, you can pass all options you'd want to pass to the `ActionMenu` item, e.g the description:

<%= embed OpPrimer::StatusButtonComponentPreview, :with_description %>
